@using WebApplication5.ViewModels.Shared

@model QuestionAnswerViewModel


@Html.Partial("~/Views/Shared/_AskQuestion.cshtml")

@section Head 
{
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
}


<article class="media content-section mb-5">
    <div class="d-flex flex-column">
        <!-- use bootstrap icons for up/down arrows -->
        <span class="vote">
            <button id="ques-up-vote"><i class="bi bi-arrow-up-circle-fill"></i></button>
        </span>
        <span id="ques-vote-count" class="vote-count">@Model.Question.VoteCount</span>
        <span class="vote">
            <button id="ques-down-vote"><i class="bi bi-arrow-down-circle-fill"></i></button>
        </span>
    </div>

    <div class="media-body">
        <h2 class="article-title">@Model.Question.Title</h2>
        <div class="article-content">@Model.Question.Content</div>

        <div class="row align-items-start">
            @foreach (var tag in Model.Question.Tags)
            {
                <span class="col badge bg-blue">@tag</span>
            }
        </div>

        <div class="article-metadata">
            <img class="rounded-circle author-img mr-0" src="@Model.Question.Author.PicturePath">

            @Html.ActionLink(Model.Question.Author.Name, "Profile", Model.Question.Author.Id, htmlAttributes: new { @class="mr-2" })

            <small class="text-muted ml-auto">@Model.Question.DateCreated</small>
        </div>
    </div>

    <div>
        @Html.ActionLink("Update", "QuestionUpdate", "Question", new { @QuestionId = Model.Question.Id })

        <button type="button" class="btn btn-danger btn-sm m-1" data-toggle="modal" data-target="#deleteModal">Delete</button>
        @Html.Partial("~/Shared/DeleteModal.cshtml", new DeleteModalViewModel() 
            { Action="DeleteQuestion", DomainName="Question", Controller="Question" } )
    </div>
</article>

<h2 class="article-title">@Model.Answers.Count Answers</h2>

@{
    foreach (var ans in @Model.Answers)
    {
        <article class="media content-section mb-5">
            <div class="d-flex flex-column">
                <span class="vote">
                    <button class="ans-up-vote"><i class="bi bi-arrow-up-circle-fill"></i></button>
                </span>
                <span class="ans-vote-count">@ans.VoteCount</span>
                <span class="vote">
                    <button class="ans-down-vote"><i class="bi bi-arrow-down-circle-fill"></i></button>
                </span>
            </div>

            <div class="media-body">
                <p class="article-content">@ans.Content</p>

                <div class="article-metadata">
                    <img class="rounded-circle author-img mr-0" src="@ans.Author.PicturePath">

                    @Html.ActionLink(ans.Author.Name, "Profile", ans.Author.Id, htmlAttributes: new { @class="mr-2" })

                    <small class="text-muted ml-auto">@ans.DateCreated</small>
                </div>
            </div>

            @if (User.Claims.Where(c => c.Value == ans.Author.Id.ToString()).Any())
            {
                <div>
                    <button type="button" class="btn btn-primary btn-sm m-1" data-toggle="modal" data-target="#updateAnswerModal">Update</button>
                    @Html.Partial("~/QuestionAndAnswer/_AnswerUpdate.cshtml", Model.AnswerUpdateForm)

                    <button type="button" class="btn btn-danger btn-sm m-1" data-toggle="modal" data-target="#deleteModal">Delete</button>
                    @Html.Partial("~/Shared/DeleteModal.cshtml", new DeleteModalViewModel()
                        { Action="DeleteAnswer", DomainName="Answer", Controller="Answer" } )
                </div>
            }
        </article>
    }
}

@Html.Partial("_AnswerCreate.cshtml", Model.AnswerCreateForm)

@section Scripts 
{
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
        function handleQuestionVote(element, color, vote) {
            // vote is true when upvoting, and vice versa
            element.css('background-color', color);

            incrementVoteCount($('#ques-vote-count'), vote);

            $.ajax({
                url: '@Url.Action("UpdateVote", "Question")',
                method: 'POST',
                data: { questionId: @Model.Question.Id, upVote: vote },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                error: function() {
                    console.log('Error voting post.');
                }
            });
        }

        function handleAnswerVote(element, color, vote) {
            element.css('background-color', color);

            let voteContainer = element.parent().parent();
            let voteCountEl = voteContainer.children('.ans-vote-count')[0];

            incrementVoteCount(voteCountEl, vote);

            $.ajax({
                url: '@Url.Action("UpdateVote", "Answer")',
                method: 'POST',
                data: { answerId: @Model.Question.Id, upVote: vote },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                error: function() {
                    console.log('Error voting post.');
                }
            });
        }

        function incrementVoteCount(element, vote) {
            let voteCount = Number(element.text());

            if (vote) {
                element.text(
                    String(voteCount + 1)
                );
            }
            else {
                element.text(
                    String(voteCount - 1)
                );
            }
        }

        $('#ques-up-vote').click(function(){
            handleQuestionVote($(this), "#0066ffff", true)
        });

        $('#ques-down-vote').click(function(){
            handleQuestionVote($(this), "#42414cff", false)
        });

        $('.ans-up-vote').click(function(){
            handleAnswerVote($(this), "#0066ffff", true)
        });

        $('.ans-down-vote').click(function(){
            handleAnswerVote($(this), "#42414cff", false)
        });
    </script>
}


