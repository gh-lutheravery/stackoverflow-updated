@model Question

<h1>Edit question</h1>


@section Head {
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
}

<div class="content-section ml-auto mr-auto mt-3">
    <form id="form" asp-controller="Question" asp-action="QuestionCreate" onsubmit="handleQuestionSubmit()">
        @Html.AntiForgeryToken()

        <div class="form-group">
            <label for="title">Title</label>
            <input class="form-control form-control-lg" type="text" placeholder="Title" value="@Model.Title" />
        </div>

        <div class="form-group">
            <label for="editor">Content</label>
            <div id="editor" class="form-control">
                @Html.Raw(Model.Content)
            </div>
            <input type="hidden" id="quill-question-content" asp-for="@Model.Content" />
        </div>

        <div class="form-group">
            <label for="TagQuery">Tags</label>
            <input class="dropdown-item" name="tagify" id="TagQuery" value="@Model.TagStr" autofocus>
            <input type="hidden" id="tags" asp-for="@Model.Tags" />
        </div>

        <div class="form-group">
            <input type="submit" name="submit" class="btn btn-outline-info" value="Submit Question" />
        </div>
    </form>
</div>

@section Scripts {
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@@yaireo/tagify"></script>
    <script>
        var questionQuill = new Quill('#editor', {
            modules: {
                toolbar: [
                    [{ header: [1, 2, false] }],
                    ['bold', 'italic', 'underline'],
                    ['image', 'code-block']
                ]
            },
            theme: 'snow'
        });

        function handleQuestionSubmit() {
            document.getElementById('quill-question-content').value = JSON.stringify(questionQuill.getContents());
            document.getElementById('tags').value = JSON.stringify(tagify.value);
        }

        var tagInput = document.getElementById('input[name=tagify]');

        // initialize Tagify for tag input
        var tagify = new Tagify(tagInput);
        tagify.settings.validate = (tagData) => {
            if (tagData.value.length > 5) {
                return "Please enter at most 5 tags.";
            }
            else {
                return true;
            }
        }
    </script>
}
