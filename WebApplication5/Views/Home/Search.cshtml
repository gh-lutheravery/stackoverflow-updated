﻿@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Web.Common;

@model WebApplication5.ViewModels.Home.SearchViewModel

@{
    ViewData["Title"] = $"\"{Model.SearchQuery}\" Search Results";
}


<div class="row align-items-start">
    <div class="d-flex justify-content-between">
        <h1>Search Results</h1>
        <div class="ml-2 mt-auto mb-auto">
            @Html.Partial("~/Views/Shared/_AskQuestion.cshtml")
        </div>
    </div>

    <div class="row align-items-start">
        
    </div>

    <div class="col-7 mr-2">
        @{
            if (Model.Questions.Any())
            {
                foreach (var question in Model.Questions)
                {
                    <div class="media">
                        <div class="d-flex flex-column">
                            <div class="p-2">@question.ViewCount Views</div>
                            <div class="p-2">@question.VoteCount Votes</div>
                        </div>
                        <div class="media-body">
                            <h4 class="mt-0">@question.Title</h4>
                            <p class="text-muted">@question.TruncatedContent</p>
                            <div class="d-flex justify-content-around prevent-overflow">
                                @foreach (var tag in @question.Tags)
                                {
                                    <span class="badge rounded-pill text-bg-dark">@tag.Title</span>
                                }
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <h4 class="mt-0">No search results found.</h4>
            }
        }

        @Html.PagedListPager(Model.Questions, page => Url.Action("Search", "Home", new { pageNumber = page, searchQuery = Model.SearchQuery }),
        new PagedListRenderOptions
        {
            DisplayItemSliceAndTotal = false,
            ContainerDivClasses = new [] { "navigation" },
            LiElementClasses = new string[] { "page-item" },
            PageClasses = new string[] { "page-link" }
        })
    </div>

    <div class="col-3">
        <h1>Random Tags</h1>
        <ul class="list-unstyled">
            @foreach (var tag in Model.RandomTags)
            {
                <li class="badge rounded-pill bg-blue">
                    @tag
                </li>
            }
        </ul>
    </div>
</div>

