﻿@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Web.Common;

@model WebApplication5.ViewModels.Home.SearchViewModel

@{
    
}


@section Head {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@@creativebulma/bulma-tagsinput/dist/css/bulma-tagsinput.min.css" />
}

<div class="row align-items-start columns">
    <div class="col-7 mr-2 column is-two-thirds">
        <div class="d-flex justify-content-between">
            <h1 class="title is-1">Search Results</h1>
        </div>

        <div class="row align-items-start is-4 level">
            <div class="level-left">
                <div class="field has-addons level-item">
                    <p class="control">
                        <a class="button" asp-controller="Home" asp-action="Search" asp-route-sortBy="Newest" asp-route-pageNumber="@Model.Questions.PageNumber">Sort by Newest</a>
                    </p>
                    <p class="control">
                        <a class="button" asp-controller="Home" asp-action="Search" asp-route-sortBy="Unanswered" asp-route-pageNumber="@Model.Questions.PageNumber">Sort by Unanswered</a>
                    </p>
                </div>
            </div>
        </div>

        @{
            if (Model.Questions.Any())
            {
                foreach (var question in Model.Questions)
                {
                    <div class="media box" id="post">
                        <span class="d-flex flex-column mini-media-rows">
                            <span class="pl-2 pr-2">@question.ViewCount Views</span>
                            <span class="pl-2 pr-2">@question.VoteCount Votes</span>
                        </span>
                        <div class="media-body">
                            <h4 class="mt-0 soc-post-title">
                                <a asp-controller="Question" asp-action="Details" asp-route-id="@question.Id">@question.Title</a>
                            </h4>

                            <p class="text-muted has-text-grey">@question.TruncatedContent...</p>
                            <div class="d-flex justify-content-around prevent-overflow">
                                @foreach (var tag in @question.Tags)
                                {
                                    <span class="badge rounded-pill text-bg-dark tag is-warning">@tag.Title</span>
                                }
                            </div>
                        </div>
                    </div>
                }

                @Html.PagedListPager(Model.Questions, page => Url.Action("Index", "Home", new {
                    pageNumber = page,
                    sortBy = Model.SortBy,
                    searchQuery = Model.SearchQuery
                }),
                new PagedListRenderOptions
                {
                    DisplayItemSliceAndTotal = false,
                    UlElementClasses = new [] { "pagination-list" },
                    ContainerDivClasses = new [] { "pagination is-rounded" },
                    ActiveLiElementClass = "pagination-link is-current soc-active-page",
                    LiElementClasses = new string[] { "" },
                    PageClasses = new string[] { "pagination-link" },
                })
            }

            else
            {
                <h4 class="mt-0">No search results found.</h4>
            }
        }
    </div>

    <div class="col-3 column is-offset-1">
        <span class="mb-2">
            @Html.Partial("~/Views/Shared/_AskQuestion.cshtml")
        </span>

        <h1 class="subtitle is-3 mt-5">Random Tags</h1>
        <div class="list-unstyled media-rows">
            @foreach (var tag in Model.RandomTags)
            {
                <div class="field">
                    <span class="badge rounded-pill has-background-link text-bg-dark tag is-info is-medium">
                        @tag
                    </span>
                </div>
            }
        </div>
    </div>
</div>


@section Scripts
    {
    <script>
        // hack to give active page correct bulma styling  (due to limitations of X.PagedList)
        let activePage = document.getElementsByClassName('soc-active-page')[0];
        activePage.firstChild.classList.remove("pagination-link");
    </script>
}


